# Module source: terraform-aws-modules/vpc/aws
# Version: latest (no version constraint specified)

module "this" {
  source                                                            = "terraform-aws-modules/vpc/aws"
  amazon_side_asn                                                   = try(local.config.amazon_side_asn, "64512")
  azs                                                               = try(local.config.azs, [])
  cidr                                                              = try(local.config.cidr, "10.0.0.0/16")
  create_database_internet_gateway_route                            = try(local.config.create_database_internet_gateway_route, false)
  create_database_nat_gateway_route                                 = try(local.config.create_database_nat_gateway_route, false)
  create_database_subnet_group                                      = try(local.config.create_database_subnet_group, true)
  create_database_subnet_route_table                                = try(local.config.create_database_subnet_route_table, false)
  create_egress_only_igw                                            = try(local.config.create_egress_only_igw, true)
  create_elasticache_subnet_group                                   = try(local.config.create_elasticache_subnet_group, true)
  create_elasticache_subnet_route_table                             = try(local.config.create_elasticache_subnet_route_table, false)
  create_flow_log_cloudwatch_iam_role                               = try(local.config.create_flow_log_cloudwatch_iam_role, false)
  create_flow_log_cloudwatch_log_group                              = try(local.config.create_flow_log_cloudwatch_log_group, false)
  create_igw                                                        = try(local.config.create_igw, true)
  create_multiple_intra_route_tables                                = try(local.config.create_multiple_intra_route_tables, false)
  create_multiple_public_route_tables                               = try(local.config.create_multiple_public_route_tables, false)
  create_private_nat_gateway_route                                  = try(local.config.create_private_nat_gateway_route, true)
  create_redshift_subnet_group                                      = try(local.config.create_redshift_subnet_group, true)
  create_redshift_subnet_route_table                                = try(local.config.create_redshift_subnet_route_table, false)
  create_vpc                                                        = try(local.config.create_vpc, true)
  customer_gateway_tags                                             = try(local.config.customer_gateway_tags, {})
  customer_gateways                                                 = try(local.config.customer_gateways, {})
  customer_owned_ipv4_pool                                          = try(local.config.customer_owned_ipv4_pool, null)
  database_acl_tags                                                 = try(local.config.database_acl_tags, {})
  database_dedicated_network_acl                                    = try(local.config.database_dedicated_network_acl, false)
  database_inbound_acl_rules                                        = try(local.config.database_inbound_acl_rules, [])
  database_outbound_acl_rules                                       = try(local.config.database_outbound_acl_rules, [])
  database_route_table_tags                                         = try(local.config.database_route_table_tags, {})
  database_subnet_assign_ipv6_address_on_creation                   = try(local.config.database_subnet_assign_ipv6_address_on_creation, false)
  database_subnet_enable_dns64                                      = try(local.config.database_subnet_enable_dns64, true)
  database_subnet_enable_resource_name_dns_a_record_on_launch       = try(local.config.database_subnet_enable_resource_name_dns_a_record_on_launch, false)
  database_subnet_enable_resource_name_dns_aaaa_record_on_launch    = try(local.config.database_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  database_subnet_group_name                                        = try(local.config.database_subnet_group_name, null)
  database_subnet_group_tags                                        = try(local.config.database_subnet_group_tags, {})
  database_subnet_ipv6_native                                       = try(local.config.database_subnet_ipv6_native, false)
  database_subnet_ipv6_prefixes                                     = try(local.config.database_subnet_ipv6_prefixes, [])
  database_subnet_names                                             = try(local.config.database_subnet_names, [])
  database_subnet_private_dns_hostname_type_on_launch               = try(local.config.database_subnet_private_dns_hostname_type_on_launch, null)
  database_subnet_suffix                                            = try(local.config.database_subnet_suffix, "db")
  database_subnet_tags                                              = try(local.config.database_subnet_tags, {})
  database_subnets                                                  = try(local.config.database_subnets, [])
  default_network_acl_egress                                        = try(local.config.default_network_acl_egress, [])
  default_network_acl_ingress                                       = try(local.config.default_network_acl_ingress, [])
  default_network_acl_name                                          = try(local.config.default_network_acl_name, null)
  default_network_acl_tags                                          = try(local.config.default_network_acl_tags, {})
  default_route_table_name                                          = try(local.config.default_route_table_name, null)
  default_route_table_propagating_vgws                              = try(local.config.default_route_table_propagating_vgws, [])
  default_route_table_routes                                        = try(local.config.default_route_table_routes, [])
  default_route_table_tags                                          = try(local.config.default_route_table_tags, {})
  default_security_group_egress                                     = try(local.config.default_security_group_egress, [])
  default_security_group_ingress                                    = try(local.config.default_security_group_ingress, [])
  default_security_group_name                                       = try(local.config.default_security_group_name, null)
  default_security_group_tags                                       = try(local.config.default_security_group_tags, {})
  default_vpc_enable_dns_hostnames                                  = try(local.config.default_vpc_enable_dns_hostnames, true)
  default_vpc_enable_dns_support                                    = try(local.config.default_vpc_enable_dns_support, true)
  default_vpc_name                                                  = try(local.config.default_vpc_name, null)
  default_vpc_tags                                                  = try(local.config.default_vpc_tags, {})
  dhcp_options_domain_name                                          = try(local.config.dhcp_options_domain_name, "")
  dhcp_options_domain_name_servers                                  = try(local.config.dhcp_options_domain_name_servers, [])
  dhcp_options_ipv6_address_preferred_lease_time                    = try(local.config.dhcp_options_ipv6_address_preferred_lease_time, null)
  dhcp_options_netbios_name_servers                                 = try(local.config.dhcp_options_netbios_name_servers, [])
  dhcp_options_netbios_node_type                                    = try(local.config.dhcp_options_netbios_node_type, "")
  dhcp_options_ntp_servers                                          = try(local.config.dhcp_options_ntp_servers, [])
  dhcp_options_tags                                                 = try(local.config.dhcp_options_tags, {})
  elasticache_acl_tags                                              = try(local.config.elasticache_acl_tags, {})
  elasticache_dedicated_network_acl                                 = try(local.config.elasticache_dedicated_network_acl, false)
  elasticache_inbound_acl_rules                                     = try(local.config.elasticache_inbound_acl_rules, [])
  elasticache_outbound_acl_rules                                    = try(local.config.elasticache_outbound_acl_rules, [])
  elasticache_route_table_tags                                      = try(local.config.elasticache_route_table_tags, {})
  elasticache_subnet_assign_ipv6_address_on_creation                = try(local.config.elasticache_subnet_assign_ipv6_address_on_creation, false)
  elasticache_subnet_enable_dns64                                   = try(local.config.elasticache_subnet_enable_dns64, true)
  elasticache_subnet_enable_resource_name_dns_a_record_on_launch    = try(local.config.elasticache_subnet_enable_resource_name_dns_a_record_on_launch, false)
  elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch = try(local.config.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  elasticache_subnet_group_name                                     = try(local.config.elasticache_subnet_group_name, null)
  elasticache_subnet_group_tags                                     = try(local.config.elasticache_subnet_group_tags, {})
  elasticache_subnet_ipv6_native                                    = try(local.config.elasticache_subnet_ipv6_native, false)
  elasticache_subnet_ipv6_prefixes                                  = try(local.config.elasticache_subnet_ipv6_prefixes, [])
  elasticache_subnet_names                                          = try(local.config.elasticache_subnet_names, [])
  elasticache_subnet_private_dns_hostname_type_on_launch            = try(local.config.elasticache_subnet_private_dns_hostname_type_on_launch, null)
  elasticache_subnet_suffix                                         = try(local.config.elasticache_subnet_suffix, "elasticache")
  elasticache_subnet_tags                                           = try(local.config.elasticache_subnet_tags, {})
  elasticache_subnets                                               = try(local.config.elasticache_subnets, [])
  enable_dhcp_options                                               = try(local.config.enable_dhcp_options, false)
  enable_dns_hostnames                                              = try(local.config.enable_dns_hostnames, true)
  enable_dns_support                                                = try(local.config.enable_dns_support, true)
  enable_flow_log                                                   = try(local.config.enable_flow_log, false)
  enable_ipv6                                                       = try(local.config.enable_ipv6, false)
  enable_nat_gateway                                                = try(local.config.enable_nat_gateway, false)
  enable_network_address_usage_metrics                              = try(local.config.enable_network_address_usage_metrics, null)
  enable_public_redshift                                            = try(local.config.enable_public_redshift, false)
  enable_vpn_gateway                                                = try(local.config.enable_vpn_gateway, false)
  external_nat_ip_ids                                               = try(local.config.external_nat_ip_ids, [])
  external_nat_ips                                                  = try(local.config.external_nat_ips, [])
  flow_log_cloudwatch_iam_role_arn                                  = try(local.config.flow_log_cloudwatch_iam_role_arn, "")
  flow_log_cloudwatch_iam_role_conditions                           = try(local.config.flow_log_cloudwatch_iam_role_conditions, [])
  flow_log_cloudwatch_log_group_class                               = try(local.config.flow_log_cloudwatch_log_group_class, null)
  flow_log_cloudwatch_log_group_kms_key_id                          = try(local.config.flow_log_cloudwatch_log_group_kms_key_id, null)
  flow_log_cloudwatch_log_group_name_prefix                         = try(local.config.flow_log_cloudwatch_log_group_name_prefix, "/aws/vpc-flow-log/")
  flow_log_cloudwatch_log_group_name_suffix                         = try(local.config.flow_log_cloudwatch_log_group_name_suffix, "")
  flow_log_cloudwatch_log_group_retention_in_days                   = try(local.config.flow_log_cloudwatch_log_group_retention_in_days, null)
  flow_log_cloudwatch_log_group_skip_destroy                        = try(local.config.flow_log_cloudwatch_log_group_skip_destroy, false)
  flow_log_deliver_cross_account_role                               = try(local.config.flow_log_deliver_cross_account_role, null)
  flow_log_destination_arn                                          = try(local.config.flow_log_destination_arn, "")
  flow_log_destination_type                                         = try(local.config.flow_log_destination_type, "cloud-watch-logs")
  flow_log_file_format                                              = try(local.config.flow_log_file_format, null)
  flow_log_hive_compatible_partitions                               = try(local.config.flow_log_hive_compatible_partitions, false)
  flow_log_log_format                                               = try(local.config.flow_log_log_format, null)
  flow_log_max_aggregation_interval                                 = try(local.config.flow_log_max_aggregation_interval, 600)
  flow_log_per_hour_partition                                       = try(local.config.flow_log_per_hour_partition, false)
  flow_log_traffic_type                                             = try(local.config.flow_log_traffic_type, "ALL")
  igw_tags                                                          = try(local.config.igw_tags, {})
  instance_tenancy                                                  = try(local.config.instance_tenancy, "default")
  intra_acl_tags                                                    = try(local.config.intra_acl_tags, {})
  intra_dedicated_network_acl                                       = try(local.config.intra_dedicated_network_acl, false)
  intra_inbound_acl_rules                                           = try(local.config.intra_inbound_acl_rules, [])
  intra_outbound_acl_rules                                          = try(local.config.intra_outbound_acl_rules, [])
  intra_route_table_tags                                            = try(local.config.intra_route_table_tags, {})
  intra_subnet_assign_ipv6_address_on_creation                      = try(local.config.intra_subnet_assign_ipv6_address_on_creation, false)
  intra_subnet_enable_dns64                                         = try(local.config.intra_subnet_enable_dns64, true)
  intra_subnet_enable_resource_name_dns_a_record_on_launch          = try(local.config.intra_subnet_enable_resource_name_dns_a_record_on_launch, false)
  intra_subnet_enable_resource_name_dns_aaaa_record_on_launch       = try(local.config.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  intra_subnet_ipv6_native                                          = try(local.config.intra_subnet_ipv6_native, false)
  intra_subnet_ipv6_prefixes                                        = try(local.config.intra_subnet_ipv6_prefixes, [])
  intra_subnet_names                                                = try(local.config.intra_subnet_names, [])
  intra_subnet_private_dns_hostname_type_on_launch                  = try(local.config.intra_subnet_private_dns_hostname_type_on_launch, null)
  intra_subnet_suffix                                               = try(local.config.intra_subnet_suffix, "intra")
  intra_subnet_tags                                                 = try(local.config.intra_subnet_tags, {})
  intra_subnets                                                     = try(local.config.intra_subnets, [])
  ipv4_ipam_pool_id                                                 = try(local.config.ipv4_ipam_pool_id, null)
  ipv4_netmask_length                                               = try(local.config.ipv4_netmask_length, null)
  ipv6_cidr                                                         = try(local.config.ipv6_cidr, null)
  ipv6_cidr_block_network_border_group                              = try(local.config.ipv6_cidr_block_network_border_group, null)
  ipv6_ipam_pool_id                                                 = try(local.config.ipv6_ipam_pool_id, null)
  ipv6_netmask_length                                               = try(local.config.ipv6_netmask_length, null)
  manage_default_network_acl                                        = try(local.config.manage_default_network_acl, true)
  manage_default_route_table                                        = try(local.config.manage_default_route_table, true)
  manage_default_security_group                                     = try(local.config.manage_default_security_group, true)
  manage_default_vpc                                                = try(local.config.manage_default_vpc, false)
  map_customer_owned_ip_on_launch                                   = try(local.config.map_customer_owned_ip_on_launch, false)
  map_public_ip_on_launch                                           = try(local.config.map_public_ip_on_launch, false)
  name                                                              = try(local.config.name, "")
  nat_eip_tags                                                      = try(local.config.nat_eip_tags, {})
  nat_gateway_destination_cidr_block                                = try(local.config.nat_gateway_destination_cidr_block, "0.0.0.0/0")
  nat_gateway_tags                                                  = try(local.config.nat_gateway_tags, {})
  one_nat_gateway_per_az                                            = try(local.config.one_nat_gateway_per_az, false)
  outpost_acl_tags                                                  = try(local.config.outpost_acl_tags, {})
  outpost_arn                                                       = try(local.config.outpost_arn, null)
  outpost_az                                                        = try(local.config.outpost_az, null)
  outpost_dedicated_network_acl                                     = try(local.config.outpost_dedicated_network_acl, false)
  outpost_inbound_acl_rules                                         = try(local.config.outpost_inbound_acl_rules, [])
  outpost_outbound_acl_rules                                        = try(local.config.outpost_outbound_acl_rules, [])
  outpost_subnet_assign_ipv6_address_on_creation                    = try(local.config.outpost_subnet_assign_ipv6_address_on_creation, false)
  outpost_subnet_enable_dns64                                       = try(local.config.outpost_subnet_enable_dns64, true)
  outpost_subnet_enable_resource_name_dns_a_record_on_launch        = try(local.config.outpost_subnet_enable_resource_name_dns_a_record_on_launch, false)
  outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch     = try(local.config.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  outpost_subnet_ipv6_native                                        = try(local.config.outpost_subnet_ipv6_native, false)
  outpost_subnet_ipv6_prefixes                                      = try(local.config.outpost_subnet_ipv6_prefixes, [])
  outpost_subnet_names                                              = try(local.config.outpost_subnet_names, [])
  outpost_subnet_private_dns_hostname_type_on_launch                = try(local.config.outpost_subnet_private_dns_hostname_type_on_launch, null)
  outpost_subnet_suffix                                             = try(local.config.outpost_subnet_suffix, "outpost")
  outpost_subnet_tags                                               = try(local.config.outpost_subnet_tags, {})
  outpost_subnets                                                   = try(local.config.outpost_subnets, [])
  private_acl_tags                                                  = try(local.config.private_acl_tags, {})
  private_dedicated_network_acl                                     = try(local.config.private_dedicated_network_acl, false)
  private_inbound_acl_rules                                         = try(local.config.private_inbound_acl_rules, [])
  private_outbound_acl_rules                                        = try(local.config.private_outbound_acl_rules, [])
  private_route_table_tags                                          = try(local.config.private_route_table_tags, {})
  private_subnet_assign_ipv6_address_on_creation                    = try(local.config.private_subnet_assign_ipv6_address_on_creation, false)
  private_subnet_enable_dns64                                       = try(local.config.private_subnet_enable_dns64, true)
  private_subnet_enable_resource_name_dns_a_record_on_launch        = try(local.config.private_subnet_enable_resource_name_dns_a_record_on_launch, false)
  private_subnet_enable_resource_name_dns_aaaa_record_on_launch     = try(local.config.private_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  private_subnet_ipv6_native                                        = try(local.config.private_subnet_ipv6_native, false)
  private_subnet_ipv6_prefixes                                      = try(local.config.private_subnet_ipv6_prefixes, [])
  private_subnet_names                                              = try(local.config.private_subnet_names, [])
  private_subnet_private_dns_hostname_type_on_launch                = try(local.config.private_subnet_private_dns_hostname_type_on_launch, null)
  private_subnet_suffix                                             = try(local.config.private_subnet_suffix, "private")
  private_subnet_tags                                               = try(local.config.private_subnet_tags, {})
  private_subnet_tags_per_az                                        = try(local.config.private_subnet_tags_per_az, {})
  private_subnets                                                   = try(local.config.private_subnets, [])
  propagate_intra_route_tables_vgw                                  = try(local.config.propagate_intra_route_tables_vgw, false)
  propagate_private_route_tables_vgw                                = try(local.config.propagate_private_route_tables_vgw, false)
  propagate_public_route_tables_vgw                                 = try(local.config.propagate_public_route_tables_vgw, false)
  public_acl_tags                                                   = try(local.config.public_acl_tags, {})
  public_dedicated_network_acl                                      = try(local.config.public_dedicated_network_acl, false)
  public_inbound_acl_rules                                          = try(local.config.public_inbound_acl_rules, [])
  public_outbound_acl_rules                                         = try(local.config.public_outbound_acl_rules, [])
  public_route_table_tags                                           = try(local.config.public_route_table_tags, {})
  public_subnet_assign_ipv6_address_on_creation                     = try(local.config.public_subnet_assign_ipv6_address_on_creation, false)
  public_subnet_enable_dns64                                        = try(local.config.public_subnet_enable_dns64, true)
  public_subnet_enable_resource_name_dns_a_record_on_launch         = try(local.config.public_subnet_enable_resource_name_dns_a_record_on_launch, false)
  public_subnet_enable_resource_name_dns_aaaa_record_on_launch      = try(local.config.public_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  public_subnet_ipv6_native                                         = try(local.config.public_subnet_ipv6_native, false)
  public_subnet_ipv6_prefixes                                       = try(local.config.public_subnet_ipv6_prefixes, [])
  public_subnet_names                                               = try(local.config.public_subnet_names, [])
  public_subnet_private_dns_hostname_type_on_launch                 = try(local.config.public_subnet_private_dns_hostname_type_on_launch, null)
  public_subnet_suffix                                              = try(local.config.public_subnet_suffix, "public")
  public_subnet_tags                                                = try(local.config.public_subnet_tags, {})
  public_subnet_tags_per_az                                         = try(local.config.public_subnet_tags_per_az, {})
  public_subnets                                                    = try(local.config.public_subnets, [])
  putin_khuylo                                                      = try(local.config.putin_khuylo, true)
  redshift_acl_tags                                                 = try(local.config.redshift_acl_tags, {})
  redshift_dedicated_network_acl                                    = try(local.config.redshift_dedicated_network_acl, false)
  redshift_inbound_acl_rules                                        = try(local.config.redshift_inbound_acl_rules, [])
  redshift_outbound_acl_rules                                       = try(local.config.redshift_outbound_acl_rules, [])
  redshift_route_table_tags                                         = try(local.config.redshift_route_table_tags, {})
  redshift_subnet_assign_ipv6_address_on_creation                   = try(local.config.redshift_subnet_assign_ipv6_address_on_creation, false)
  redshift_subnet_enable_dns64                                      = try(local.config.redshift_subnet_enable_dns64, true)
  redshift_subnet_enable_resource_name_dns_a_record_on_launch       = try(local.config.redshift_subnet_enable_resource_name_dns_a_record_on_launch, false)
  redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch    = try(local.config.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch, true)
  redshift_subnet_group_name                                        = try(local.config.redshift_subnet_group_name, null)
  redshift_subnet_group_tags                                        = try(local.config.redshift_subnet_group_tags, {})
  redshift_subnet_ipv6_native                                       = try(local.config.redshift_subnet_ipv6_native, false)
  redshift_subnet_ipv6_prefixes                                     = try(local.config.redshift_subnet_ipv6_prefixes, [])
  redshift_subnet_names                                             = try(local.config.redshift_subnet_names, [])
  redshift_subnet_private_dns_hostname_type_on_launch               = try(local.config.redshift_subnet_private_dns_hostname_type_on_launch, null)
  redshift_subnet_suffix                                            = try(local.config.redshift_subnet_suffix, "redshift")
  redshift_subnet_tags                                              = try(local.config.redshift_subnet_tags, {})
  redshift_subnets                                                  = try(local.config.redshift_subnets, [])
  reuse_nat_ips                                                     = try(local.config.reuse_nat_ips, false)
  secondary_cidr_blocks                                             = try(local.config.secondary_cidr_blocks, [])
  single_nat_gateway                                                = try(local.config.single_nat_gateway, false)
  tags                                                              = try(local.config.tags, {})
  use_ipam_pool                                                     = try(local.config.use_ipam_pool, false)
  vpc_block_public_access_exclusions                                = try(local.config.vpc_block_public_access_exclusions, {})
  vpc_block_public_access_options                                   = try(local.config.vpc_block_public_access_options, {})
  vpc_flow_log_iam_policy_name                                      = try(local.config.vpc_flow_log_iam_policy_name, "vpc-flow-log-to-cloudwatch")
  vpc_flow_log_iam_policy_use_name_prefix                           = try(local.config.vpc_flow_log_iam_policy_use_name_prefix, true)
  vpc_flow_log_iam_role_name                                        = try(local.config.vpc_flow_log_iam_role_name, "vpc-flow-log-role")
  vpc_flow_log_iam_role_use_name_prefix                             = try(local.config.vpc_flow_log_iam_role_use_name_prefix, true)
  vpc_flow_log_permissions_boundary                                 = try(local.config.vpc_flow_log_permissions_boundary, null)
  vpc_flow_log_tags                                                 = try(local.config.vpc_flow_log_tags, {})
  vpc_tags                                                          = try(local.config.vpc_tags, {})
  vpn_gateway_az                                                    = try(local.config.vpn_gateway_az, null)
  vpn_gateway_id                                                    = try(local.config.vpn_gateway_id, "")
  vpn_gateway_tags                                                  = try(local.config.vpn_gateway_tags, {})
}
